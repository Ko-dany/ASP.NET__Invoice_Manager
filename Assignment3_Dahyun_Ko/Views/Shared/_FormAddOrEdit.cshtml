@using Customers.Entities;
@model Customer

<div class="container">
    <h2 class="display-4">@ViewData["Title"]</h2>

    <form asp-controller="Customer" asp-action="Edit" method="post">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="text-danger bg-info">You input invalid valuee.</div>
        }
        <div class="form-group">
            @{
                var nameValidationErrors = ViewData.ModelState["Name"]?.Errors;
                var isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.Name">Name</label>
            <input asp-for="@Model.Name" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")"/>
            <span asp-validation-for="@Model.Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            @{
                nameValidationErrors = ViewData.ModelState["Address1"]?.Errors;
                isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.Address1">Address1</label>
            <input asp-for="@Model.Address1" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")" />
            <span asp-validation-for="@Model.Address1" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="@Model.Address2">Address2</label>
            <input asp-for="@Model.Address2" type="text" class="form-control" />
        </div>
        <div class="form-group">
            @{
                nameValidationErrors = ViewData.ModelState["City"]?.Errors;
                isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.City">City</label>
            <input asp-for="@Model.City" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")" />
            <span asp-validation-for="@Model.City" class="text-danger"></span>
        </div>
        <div class="form-group">
            @{
                nameValidationErrors = ViewData.ModelState["ProvinceOrState"]?.Errors;
                isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.ProvinceOrState">Province/State</label>
            <input asp-for="@Model.ProvinceOrState" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")" />
            <span asp-validation-for="@Model.ProvinceOrState" class="text-danger"></span>

        </div>
        <div class="form-group">
            @{
                nameValidationErrors = ViewData.ModelState["ZipOrPostalCode"]?.Errors;
                isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.ZipOrPostalCode">Zip/Postal Code</label>
            <input asp-for="@Model.ZipOrPostalCode" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")" />
            <span asp-validation-for="@Model.ZipOrPostalCode" class="text-danger"></span>
        </div>
        <div class="form-group">
            @{
                nameValidationErrors = ViewData.ModelState["Phone"]?.Errors;
                isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.Phone">Phone</label>
            <input asp-for="@Model.Phone" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")" />
            <span asp-validation-for="@Model.Phone" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="@Model.ContactFirstName">Contact First Name</label>
            <input asp-for="@Model.ContactFirstName" type="text" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="@Model.ContactLastName">Contact Last Name</label>
            <input asp-for="@Model.ContactLastName" type="text" class="form-control" />
        </div>
        <div class="form-group">
            @{
                nameValidationErrors = ViewData.ModelState["ContactEmail"]?.Errors;
                isNameInvalid = nameValidationErrors != null && nameValidationErrors.Any();
            }
            <label asp-for="@Model.ContactEmail">Contact Email</label>
            <input asp-for="@Model.ContactEmail" type="text" class="form-control @(isNameInvalid ? "is-invalid bg-warning" : "")" />
            <span asp-validation-for="@Model.ContactEmail" class="text-danger"></span>
        </div>
        <input type="hidden" asp-for="@Model.CustomerId" />
        <button type="submit" class="btn btn-primary mt-3">@ViewBag.Action</button>
        <a asp-controller="Customer" asp-action="Customers" class="btn btn-primary mt-3">Cancel</a>
    </form>
</div>